{"version":3,"sources":["redux/actions/actionTypes.js","components/GroceryForm.js","components/GroceryItem.js","redux/actions/groceryActions.js","components/GroceryEditForm.js","containers/GroceryContainer.js","App.js","redux/reducers/index.js","redux/reducers/groceryReducer.js","index.js","redux/configureStore.js"],"names":["CREATE_ITEM","DELETE_ITEM","EDIT_ITEM","UPDATE_ITEM","InputText","styled","input","attrs","type","RowMarginBottom","div","ButtonSubmit","button","Icon","span","GroceryForm","this","props","handleSubmit","handleChange","itemTitle","onSubmit","onChange","value","className","Component","Row","Half","ItemCard","Button","GroceryItem","dispatch","item","title","onClick","index","id","connect","GroceryEditForm","handleEditChange","e","state","target","setState","handleEditSubmit","preventDefault","editing","itemActions","GroceryCard","GroceryContainer","useState","setItem","grocery","useSelector","useDispatch","useCallback","changeItem","map","key","App","rootReducer","combineReducers","action","filter","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxImmutableStateInvariant","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.611bafa0.chunk.js","sourcesContent":["// Action Types\nexport const CREATE_ITEM = \"CREATE_ITEM\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\nexport const EDIT_ITEM = \"EDIT_ITEM\";\nexport const UPDATE_ITEM = \"UPDATE_ITEM\";\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\n// Make a common file for this styled-component\nconst InputText = styled.input.attrs({\n    type: \"text\"\n})`\n  border-radius: 5px;\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nconst RowMarginBottom = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst ButtonSubmit = styled.button`\n  margin-left: 10px;\n  background-color: white;\n  border-radius: 5px;\n  border: 1px solid black;\n  padding: 7px;\n`;\n\nconst Icon = styled.span`\n  font-size: 18px;\n  color: black;\n`;\n\nclass GroceryForm extends Component {\n    render() {\n        const { handleSubmit, handleChange, itemTitle } = this.props;\n        return (\n            <form onSubmit={handleSubmit}>\n                <h2>My Grocery List</h2>\n                <RowMarginBottom>\n                    <InputText onChange={handleChange} value={itemTitle} />\n                    <ButtonSubmit type=\"submit\">\n                        <Icon className=\"material-icons\">add</Icon>\n                    </ButtonSubmit>\n                </RowMarginBottom>\n            </form>\n        );\n    }\n}\n\nexport default GroceryForm;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport * as itemActions from \"../redux/actions/groceryActions\";\n\n// *** Make a common file for these styled-components\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Half = styled.div`\n  width: 50%;\n`;\n\n// ***\n\nconst ItemCard = styled.div`\n  border-bottom: 1px solid black;\n  margin-top: 2px;\n  padding: 10px;\n  padding-right: 0px;\n`;\n\nconst Button = styled.button`\n  border-radius: 5px;\n  border: 1px solid grey;\n  padding: 7px;\n  margin-left: 5px;\n`;\n\n/** Make a reusable component for these components */\nconst Icon = styled.span`\n  font-size: 18px;\n  color: grey;\n`;\n\nclass GroceryItem extends Component {\n  render() {\n    const { dispatch, item } = this.props;\n    return (\n      <ItemCard>\n        <Row>\n          <Half>\n            <span>{item.title}</span>\n          </Half>\n          <Half>\n            <Button onClick={() => dispatch(itemActions.deleteItem(item.id))}>\n              <Icon className=\"material-icons\">delete</Icon>\n            </Button>\n            <Button onClick={() => dispatch(itemActions.editItem(item.id))}>\n              <Icon className=\"material-icons\">edit</Icon>\n            </Button>\n          </Half>\n        </Row>\n      </ItemCard>\n    );\n  }\n}\n\nexport default connect()(GroceryItem);\n","import { CREATE_ITEM, DELETE_ITEM, EDIT_ITEM, UPDATE_ITEM } from \"./actionTypes\";\n\n// Action Creators\nexport function createItem(item) {\n  return {\n    type: CREATE_ITEM,\n    item\n  };\n}\n\nexport function deleteItem(index) {\n  return {\n    type: DELETE_ITEM,\n    index\n  };\n}\n\nexport function editItem(index) {\n  return {\n    type: EDIT_ITEM,\n    index,\n  };\n}\n\nexport function updateItem(index, item) {\n  return {\n    type: UPDATE_ITEM,\n    index,\n    item\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport * as itemActions from \"../redux/actions/groceryActions\";\nimport PropTypes from \"prop-types\";\n\n// Make a common file for this styled-component\nconst InputText = styled.input.attrs({\n    type: \"text\"\n})`\n  border-radius: 5px;\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n`;\n\nconst Button = styled.button`\n  margin-left: 10px;\n  background-color: white;\n  border-radius: 5px;\n  border: 1px solid black;\n  padding: 7px;\n`;\n\nconst Icon = styled.span`\n  font-size: 18px;\n  color: black;\n`;\n\nclass GroceryEditForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = props.item\n    }\n\n    handleEditChange = e => {\n        const item = { ...this.state, title: e.target.value }; // un niveau plus bas car props\n        this.setState({ ...item });\n    };\n\n    handleEditSubmit = e => {\n        e.preventDefault()\n        const item = { ...this.item, editing: false };\n        this.setState({ item });\n        this.props.dispatch(itemActions.updateItem(this.state.id, this.state));\n    };\n\n    render() {\n        const { title } = this.state;\n        return (\n            <form onSubmit={this.handleEditSubmit}>\n                <Row>\n                    <InputText onChange={this.handleEditChange} value={title} />\n                    <Button type=\"submit\">\n                        <Icon className=\"material-icons\">save</Icon>\n                    </Button>\n                </Row>\n            </form>\n        );\n    }\n}\n\nGroceryEditForm.propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    item: PropTypes.object.isRequired\n};\n\nexport default connect()(GroceryEditForm);","import React, { useState, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as itemActions from \"../redux/actions/groceryActions\";\nimport GroceryForm from \"../components/GroceryForm\";\nimport GroceryItem from \"../components/GroceryItem\";\nimport GroceryEditForm from \"../components/GroceryEditForm\";\nimport styled from \"styled-components\";\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst GroceryCard = styled.div`\n  margin: 10px;\n`;\n\nconst GroceryContainer = () => {\n  const [item, setItem] = useState({\n    id: 0,\n    title: \"\",\n    editing: false,\n  });\n  const grocery = useSelector((state) => state.grocery);\n  const dispatch = useDispatch();\n\n  // useCallBack()\n  const handleChange = useCallback((e) => {\n    const changeItem = { ...item, title: e.target.value };\n    setItem(changeItem);\n  }, []);\n\n  // const handleChange = useCallback(\n  //   () => {\n  //     doSomething(a, b);\n  //   },\n  //   [a, b],\n  // );\n\n  // useCallBack()\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (item.title !== \"\") {\n      dispatch(itemActions.createItem(item));\n      setItem({\n        id: item.id + 1,\n        title: \"\",\n      });\n    }\n  };\n\n  return (\n    <Row>\n      <GroceryCard>\n        <GroceryForm\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n          itemTitle={item.title}\n        />\n        {grocery.map((item, index) =>\n          item.editing ? (\n            <GroceryEditForm key={`edit-${index}`} item={item} /> // Form to update\n          ) : (\n            <GroceryItem key={`item-${index}`} item={item} />\n          )\n        )}\n      </GroceryCard>\n    </Row>\n  );\n};\n\nexport default GroceryContainer;\n","import React from \"react\";\nimport GroceryContainer from \"./containers/GroceryContainer\";\n\nfunction App() {\n  return (\n    <div>\n      <GroceryContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport grocery from \"./groceryReducer\";\n\nconst rootReducer = combineReducers({\n  grocery\n});\n\nexport default rootReducer;\n","import { CREATE_ITEM, DELETE_ITEM, EDIT_ITEM, UPDATE_ITEM } from \"../actions/actionTypes\";\n\nexport default function groceryReducer(state = [], action) {\n  switch (action.type) {\n    case CREATE_ITEM:\n      return [...state, { ...action.item }];\n    case DELETE_ITEM:\n      return state.filter(item => item.id !== action.index);\n    case EDIT_ITEM:\n      return state.map(item => item.id === action.index ? { ...item, editing: !item.editing } : item )\n    case UPDATE_ITEM:\n      return state.map((item) => {\n        if(item.id === action.index) {\n          return { ...item,\n            title: action.item.title,\n            editing: false\n          }\n        } else return item;\n      })\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport configureStore from \"./redux/configureStore\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </ReduxProvider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\n\nexport default function configureStore() {\n  // Add support for Redux dev tools\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  return createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\n  );\n}\n"],"sourceRoot":""}